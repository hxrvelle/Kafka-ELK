version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  elasticsearch:
    image: elasticsearch:8.11.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g

  logstash:
    image: logstash:8.11.3
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash-config.conf
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.11.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: reactjava
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sxwyxr88
    ports:
      - "5432"

  rxjava-app:
    build:
      context: .
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/reactjava
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: sxwyxr88
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/reactjava
      SPRING_FLYWAY_USER: postgres
      SPRING_FLYWAY_PASSWORD: sxwyxr88
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093  # Используем тот же порт, что и в Kafka